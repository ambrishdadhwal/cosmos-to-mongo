{
    "addressAreas": "select c.id, c.odbRefId, c.country, c.cities from c",
    "addresses": "select c.id, c.odbRefId, c.customerId, c.refId, c.country, c.city, c.addressLine1, c.latitude, c.longitude, c.building, is_defined(c.isDefault) ? c.isDefault : false as isDefault, c.street, c.state, c.landmark, c.phoneNumber, is_defined(c.isPhoneVerified) ? c.isPhoneVerified : false as isPhoneVerified, c.instructions, c.source, c.tag, c.status, c.emirate, c.addressLine2, c.zip, c.makani, c.gis, c.landline, c.zone, c.location, c.nickname, c.addressName, c.floor, c.lastName, c.areaCode, c.cityCode, c.title, c.createdAt,c.updatedAt, c.deletedAt from c",
    "apiKeys": "select c.id, c.odbRefId, c.name, c.key, c.countries, c.scopes, c.createdAt, c.updatedAt, c.deletedAt, c.expiredAt from c",
    "CFPayMappings": "select c.id, c.customerId, c.odbRefId, c.cardId, c.barcode, c.usedCount, c.createdAt, c.updatedAt, c.deletedAt, c.expiredAt from c",
    "CFPayPaymentTokens": "select c.id, c.odbRefId, c.expiryMonth, c.expiryYear, c.token, c.clientDeviceId, c.cardNickName, c.lastFourDigits, c.bin, c.customerId, c.type, c.paymentGateway, c.country, c.isMerchantAuthorized, c.isDefault, c.createdAt, c.updatedAt, c.deletedAt, ARRAY( select value { token: t.token, paymentGateway: t.paymentGateway } from t in c.tokens) as tokens from c",
    "CFPayPins": "select c.id, c.pin, c.customerId,c.accountHolderName, c.preSalt, c.pinLegacy, c.odbRefId,  c.createdAt, c.updatedAt, c.expiredAt from c",
    "customers": "select c.id as id, c.username, c.emailVerified, c.odbRefId, c.auth0Id, c.legacy, c.countryOfOperation, c.status, c.password, c.lastLoginIp, c.isFraudster, c.isSerialReturner, c.isMobileScanAndGoEnabled, c.isNewUser, c.hasPlacedOrder, {title: c.profile.title, firstName:c.profile.firstName, lastName:c.profile.lastName, gender:c.profile.gender, dateOfBirth: c.profile.dateOfBirth, nationalityCountry : c.profile.nationalityCountry, state: c.profile.state } as profile, c.meta, c.salt, c.oldSalt, is_defined(c.policyAcceptance) ? ARRAY( select value {type: t.type, policyVersion: t.policyVersion, createdAt: t.createdAt } from t in c.policyAcceptance ) : c.policyAcceptance as policyAcceptance, ARRAY(select value {isVerified: is_defined(t.isVerified) ? t.isVerfied : false, type: t.type, 'value': t['value'], deletedAt: t.deletedAt, createdAt: t.createdAt, verifiedAt: t.verifiedAt, updatedAt: t.updatedAt, auth0SmsUserId: t.auth0SmsUserId, tag: t.tag} from t in c.contacts ) as contacts, is_defined(c.migrationStatus) ? { auth0: is_defined(c.migrationStatus.auth0) ? {source: is_defined(c.migrationStatus.auth0.source) ? c.migrationStatus.auth0.source: c.migrationStatus.auth0.source, migratedAt:  c.migrationStatus.auth0.migratedAt }: c.migrationStatus.auth0, CDBOauth: is_defined(c.migrationStatus.CDBOauth) ? {source: is_defined(c.migrationStatus.CDBOauth.source) ? c.migrationStatus.CDBOauth.source: c.migrationStatus.CDBOauth.source, migratedAt: c.migrationStatus.CDBOauth.migratedAt}: c.migrationStatus.CDBOauth, share: is_defined(c.migrationStatus.share) ? { AE: is_defined(c.migrationStatus.share.AE) ? {source: is_defined(c.migrationStatus.share.AE.source) ? c.migrationStatus.share.AE.source: c.migrationStatus.share.AE.source, migratedAt: c.migrationStatus.share.AE.migratedAt, pointsMigratedAt: c.migrationStatus.share.AE.pointsMigratedAt} : c.migrationStatus.share.AE } : c.migrationStatus.share, myclub: is_defined(c.migrationStatus.myclub) ? {BH: is_defined(c.migrationStatus.myclub.BH) ? {source: is_defined(c.migrationStatus.myclub.BH.source) ? c.migrationStatus.myclub.BH.source: c.migrationStatus.myclub.BH.source, migratedAt: c.migrationStatus.myclub.BH.migratedAt, pointsMigratedAt: c.migrationStatus.myclub.BH.pointsMigratedAt} : c.migrationStatus.myclub.BH, KW: is_defined(c.migrationStatus.myclub.KW) ? {source: is_defined(c.migrationStatus.myclub.KW.source) ? c.migrationStatus.myclub.KW.source: c.migrationStatus.myclub.KW.source, migratedAt: c.migrationStatus.myclub.KW.migratedAt, pointsMigratedAt: c.migrationStatus.myclub.KW.pointsMigratedAt} : c.migrationStatus.myclub.KW } : c.migrationStatus.myclub} : c.migrationStatus as migrationStatus,  c.createdAt,  c.updatedAt ,  c.deletedAt , c.lastLoginAt from c",
    "loyalties": "select c.id, c.customerId, c.odbRefId, c.type, c.countryOfOperation, c.cardNumber, c.accountNumber, c.accountId, c.linkedShareId, c.phoneNumber, c.securityAnswer, c.securityQuestion, c.status, c.secondaryCustomerIds, c.isPlasticCardLinked, c.oldCardNumber, c.oldAccountNumber,  c.createdAt , c.updatedAt , c.deletedAt from c",
    "notificationSettings": "select c.id, c.customerId, c.name, c.isEnabled, c['value'], c.types, c.createdAt, c.updatedAt, c.deletedAt from c",
    "preferences": "select c.id, c.customerId, c.goGreenStatus, c.singleUseBagOpted, c.countryOfOperation, c.createdAt , c.updatedAt,  c.deletedAt from c"
}
